package com.unisinos.petrisimulator;

import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author augustopasini
 */
public class MainWindow extends javax.swing.JFrame {

    private PetriNet petri;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botAvancar = new javax.swing.JButton();
        botCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputJson = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PetriSim");

        botAvancar.setText("Avançar");
        botAvancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAvancarActionPerformed(evt);
            }
        });

        botCancelar.setText("Fechar");
        botCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botCancelarActionPerformed(evt);
            }
        });

        inputJson.setColumns(20);
        inputJson.setRows(5);
        jScrollPane1.setViewportView(inputJson);

        outputTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        outputTable.setColumnSelectionAllowed(true);
        outputTable.setEnabled(false);
        outputTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(outputTable);
        outputTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botAvancar))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botAvancar)
                    .addComponent(botCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botAvancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAvancarActionPerformed
        if (petri == null) {
            inputJson.setEnabled(false);
            petri = new PetriNet(new ArrayList<>(), new ArrayList<>(), new ArrayList<>());
            try {
                petri.createPetriNet(inputJson.getText());
            } catch (Exception e) {
                System.out.println("Erro ao criar a rede de Petri. Verifique se a entrada está correta!");
            }
            DefaultTableModel tableModel = new DefaultTableModel();
            tableModel.addColumn("Ciclo");
            petri.getLugares().forEach((l) -> {
                tableModel.addColumn(l.getLabel());
            });
            petri.getTransicoes().forEach((t) -> {
                tableModel.addColumn(t.getLabel());
            });
            outputTable.setModel(tableModel);
        } else {
            if (petri.isFinished()) {
                botAvancar.setEnabled(false);
                return;
            }
            petri.step();
        }
        DefaultTableModel tableModel = (DefaultTableModel) outputTable.getModel();
        ArrayList<Integer> row = new ArrayList<>();
        row.add(petri.getCiclo());
        petri.getLugares().forEach((l) -> {
            row.add(l.getMarcas());
        });
        petri.getTransicoes().forEach((t) -> {
            if (t.isHabil()) {
                row.add(1);
            } else {
                row.add(0);
            }
        });
        tableModel.addRow(row.toArray());
    }//GEN-LAST:event_botAvancarActionPerformed

    private void botCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botCancelarActionPerformed
        // Fecha janela
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_botCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botAvancar;
    private javax.swing.JButton botCancelar;
    private javax.swing.JTextArea inputJson;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable outputTable;
    // End of variables declaration//GEN-END:variables
}
